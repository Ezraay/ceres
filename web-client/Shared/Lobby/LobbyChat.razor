@using Microsoft.AspNetCore.SignalR.Client
@if (IsConnected)
{
    <h4>Chat</h4>

    <label class="row p-1">
        <div class="col-3">User</div>
        <div class="col col-sm-9"><input @bind="userInput" class="w-100" disabled="@(!IsConnected)"/></div>
    </label>
    <label class="row p-1">
        <div class="col-3">Message</div>
        <div class="col"><input @bind="messageInput" class="w-100" disabled="@(!IsConnected)"/></div>
    </label>
    <button disabled="@(!IsConnected)" @onclick="Send">Send</button>

    <hr>
    <ul class="scrollable-box list-group list-group-flush">
        @for (var i = messages.Count - 1; i >= 0; i--)
        {
            <li class="list-group-item">@messages[i]</li>
        }
    </ul>
}
@code {

    private List<string> messages = new();
    private string? userInput;
    private string? messageInput;

    [Parameter]
    public HubConnection? LobbyHubConnection { get; set; }
    
    [CascadingParameter]
    public bool IsConnected { get; set; }

    public void AddMessage(string userName, string message)
    {
        var encodedMsg = $"{userName}: {message}";
        messages.Add(encodedMsg);
        InvokeAsync(StateHasChanged);
    }

    private async Task Send()
    {
        if (LobbyHubConnection is not null && IsConnected)
        {
            await LobbyHubConnection.SendAsync("SendMessage", userInput, messageInput);
        }
    }






}